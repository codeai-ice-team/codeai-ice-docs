{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "cc869bd9",
   "metadata": {},
   "source": [
    "# Results of anomaly detection using AnomalyTransformer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "21763f12-3752-43b5-8f89-e9e131d3c979",
   "metadata": {},
   "outputs": [],
   "source": [
    "from ice.anomaly_detection.datasets import AnomalyDetectionRiethTEP\n",
    "from ice.anomaly_detection.models import AnomalyTransformer\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67244937-7e66-4f90-82e4-a9d4e634cd08",
   "metadata": {},
   "source": [
    "Download the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c87e9ba4-4dc4-447b-91e1-df591298e756",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9d476c3e21c2495fbcafd2871cbcb866",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Reading data/rieth_tep/df.csv:   0%|          | 0/15330000 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "feedeceb83ee4259a9317b06faaa5adf",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Reading data/rieth_tep/target.csv:   0%|          | 0/15330000 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1a190f2920934441943c09b99458c38e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Reading data/rieth_tep/train_mask.csv:   0%|          | 0/15330000 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dataset = AnomalyDetectionRiethTEP()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7a5479d-ac9e-47fc-819f-509cd0f1b960",
   "metadata": {},
   "source": [
    "Normalize the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "355b8279-7b82-41ec-9ad0-5b45c0630fb8",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "dataset.df[dataset.train_mask] = scaler.fit_transform(dataset.df[dataset.train_mask])\n",
    "dataset.df[dataset.test_mask] = scaler.transform(dataset.df[dataset.test_mask])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a149d31c-e492-4c2b-b854-e83cdc752b87",
   "metadata": {},
   "source": [
    "Create the AnomalyTransformer model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a975476c-1428-486e-b6c6-f947a096a0d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = AnomalyTransformer(\n",
    "    window_size=32, \n",
    "    lr=0.001, \n",
    "    num_epochs=30, \n",
    "    device='cuda', \n",
    "    verbose=True, \n",
    "    val_ratio=0.1,\n",
    "    save_checkpoints=True,\n",
    "    threshold_level=0.98,\n",
    "    d_model=32, \n",
    "    e_layers=1,\n",
    "    d_ff=32, \n",
    "    dropout=0.0\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc512437-9aa5-4f2a-95e1-3c8848bba86d",
   "metadata": {},
   "source": [
    "Load the checkpoint."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "adaf6fe2-d43a-4c10-89f3-f318f5d496a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "model.load_checkpoint('transformer_anomaly_detection_epoch_30.tar')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8159e40f-0eed-43c0-867b-cf0ced5c3464",
   "metadata": {},
   "source": [
    "Evaluate the model on the test data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b80980d7-9253-43db-8e5d-c4100df090e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ccd51975d7e949a785adf91a1824096d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Creating sequence of samples:   0%|          | 0/10500 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/76125 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "{'accuracy': 0.8588669950738916,\n",
       " 'true_positive_rate': [0.830817625],\n",
       " 'false_positive_rate': [0.012466169724770642]}"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics = model.evaluate(dataset.df[dataset.test_mask], dataset.target[dataset.test_mask])\n",
    "metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6dabae10-4ef6-47db-a73b-e42605937c5b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
