{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d5da40d2-3c0c-4b29-a76b-cc8f1eda522b",
   "metadata": {},
   "source": [
    "# Fine-tuning tutorial"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "40bc898a-3bf8-4e44-92d8-4aa0ef2ac2c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "from ice.anomaly_detection.datasets import AnomalyDetectionSmallTEP\n",
    "from ice.anomaly_detection.models import AutoEncoderMLP"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6286210b-a2c3-40de-af44-b2d08d521efd",
   "metadata": {},
   "source": [
    "Create the model and dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0d43bd9b-ff48-4943-bdde-1a95d5e289ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ed014042c3e7427b84c942f120fb6e0a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Reading data/small_tep/df.csv:   0%|          | 0/153300 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "213f2293cf1c4594b007a54c842e6290",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Reading data/small_tep/target.csv:   0%|          | 0/153300 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "461ee34fc88e4d9287ef9c68e352de36",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Reading data/small_tep/train_mask.csv:   0%|          | 0/153300 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dataset = AnomalyDetectionSmallTEP()\n",
    "scaler = StandardScaler()\n",
    "dataset.df[dataset.train_mask] = scaler.fit_transform(dataset.df[dataset.train_mask])\n",
    "dataset.df[dataset.test_mask] = scaler.transform(dataset.df[dataset.test_mask])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a14f2cd0-9ba6-45a7-a0bd-e367f406ef7a",
   "metadata": {},
   "outputs": [],
   "source": [
    "model1 = AutoEncoderMLP(\n",
    "    window_size=100,\n",
    "    batch_size=512,\n",
    "    num_epochs=3,\n",
    "    verbose=True,\n",
    "    device='cuda'\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ae237de-9c9f-460d-8fe4-0db2f942870b",
   "metadata": {},
   "source": [
    "Train model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f1922d47-2d65-4d1b-979b-f18bd86db795",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9204d14e7f4e4e93b21377b0c6c9beff",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Creating sequence of samples:   0%|          | 0/105 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e453b458da184e9a8917218fb2f5cd2a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Epochs ...:   0%|          | 0/3 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1, Loss: 0.8713\n",
      "Epoch 1, Validation Loss: 0.8847\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 2, Loss: 0.8607\n",
      "Epoch 2, Validation Loss: 0.8557\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 3, Loss: 0.8247\n",
      "Epoch 3, Validation Loss: 0.8167\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model1.fit(dataset.df[dataset.train_mask])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "baf97281-589b-4166-823b-20b0fd278ac6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "62d02626c130446eb6c486d77d8cacda",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Creating sequence of samples:   0%|          | 0/105 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/177 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "{'accuracy': 0.7003322259136212,\n",
       " 'true_positive_rate': [0.6632125],\n",
       " 'false_positive_rate': [0.011359223300970873]}"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics = model1.evaluate(dataset.df[dataset.test_mask], dataset.target[dataset.test_mask])\n",
    "metrics"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8aa0aadf-f1bb-4baa-b690-d8dc78795abe",
   "metadata": {},
   "source": [
    "Save model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0de938dd-fea5-4e48-9f6f-66def929705e",
   "metadata": {},
   "outputs": [],
   "source": [
    "model1.save_checkpoint('model1.tar')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49d9c728-fc71-4fa2-bad1-a1967d43ba63",
   "metadata": {},
   "source": [
    "Create new model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "49f52be3-2029-42bf-9f53-15a4f528b01f",
   "metadata": {},
   "outputs": [],
   "source": [
    "model2 = AutoEncoderMLP(\n",
    "    window_size=100,\n",
    "    batch_size=512,\n",
    "    num_epochs=3,\n",
    "    verbose=True,\n",
    "    device='cuda'\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "321c598f-8928-4867-93d5-f387d42c0702",
   "metadata": {},
   "source": [
    "Load saved parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d3b139fc-d503-4d60-8cc6-923675bfd587",
   "metadata": {},
   "outputs": [],
   "source": [
    "model2.load_checkpoint('model1.tar')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9ee1c661-9404-46c6-b9ef-6e1b84c160f0",
   "metadata": {},
   "source": [
    "Fine-tune"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "bcf5bfe7-6a7e-43aa-951d-b10afc4c0f46",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "07aec501b731418bbec576a37a68df32",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Creating sequence of samples:   0%|          | 0/105 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c4a9da34174c406a9b3a84168fd5b1e2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Epochs ...:   0%|          | 0/3 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 4, Loss: 0.7929\n",
      "Epoch 4, Validation Loss: 0.7954\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 5, Loss: 0.7838\n",
      "Epoch 5, Validation Loss: 0.7866\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 6, Loss: 0.7814\n",
      "Epoch 6, Validation Loss: 0.7806\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model2.fit(dataset.df[dataset.train_mask])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8d32064e-6e7f-45db-8c4b-959a4a37e3f5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "097a90d95e16407cbe45ab603be14dc4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Creating sequence of samples:   0%|          | 0/105 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Steps ...:   0%|          | 0/177 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "{'accuracy': 0.7454928017718715,\n",
       " 'true_positive_rate': [0.7170875],\n",
       " 'false_positive_rate': [0.03388349514563107]}"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics = model2.evaluate(dataset.df[dataset.test_mask], dataset.target[dataset.test_mask])\n",
    "metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "69a13f3a-5d3e-4cf6-b00a-9ee218cc9e44",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
